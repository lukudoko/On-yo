generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Kanji {
  id               Int           @id @default(autoincrement())
  character        String        @unique
  strokes          Int
  grade            Int?
  freq             Int?
  jlpt_new         Int?
  meanings         String[]
  readings_on      String[]
  readings_kun     String[]
  primary_onyomi   String?
  usefulness_score Float
  onyomiGroup      OnyomiGroup?  @relation(fields: [primary_onyomi], references: [reading])
  progress         UserProgress[]
  exampleWords     ExampleWord[] // Add this line
}

model OnyomiGroup {
  id               Int     @id @default(autoincrement())
  reading          String  @unique
  usefulness_score Float
  kanji            Kanji[] // This creates the relation
}

model User {
  id        String         @id
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  track     String         @default("stat") // Add this line
  progress  UserProgress[]
  Session   Session[]
}

model Session {
  id      String   @id
  userId  String // References User.id
  expires DateTime
  user    User     @relation(fields: [userId], references: [id])
}

model UserProgress {
  id           Int      @id @default(autoincrement())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  kanjiId      Int
  kanji        Kanji    @relation(fields: [kanjiId], references: [id])
  masteryLevel Int      @default(0) // 0=unseen, 1=learning, 2=known
  testStreak   Int      @default(0) // Current correct test streak
  lastStudied  DateTime @updatedAt
  createdAt    DateTime @default(now())

  @@unique([userId, kanjiId])
}

model ExampleWord {
  id        Int      @id @default(autoincrement())
  word      String   @unique
  reading   String
  meaning   String
  kanji     Kanji    @relation(fields: [kanjiId], references: [id])
  kanjiId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}